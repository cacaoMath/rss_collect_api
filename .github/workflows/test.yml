name: lint check | test

on:
  push:
    branches:
      - dev*
      - main
      - issues*

jobs:
  lint:
    runs-on: ubuntu-20.04
    steps:
      - name: checkout
        uses: actions/checkout@v2

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.10.8
      - name: install pipenv
        run: |
          python -m pip install --upgrade pip
          python -m pip install pipenv

      - name: install packages
        run: pipenv install --dev

      - name: run flake8
        run: |
          pipenv run flake8

  test:
    runs-on: ubuntu-20.04
    services:
      postgres:
        image: postgres
        env:
          POSTGRES_USER: user
          POSTGRES_PASSWORD: password
          POSTGRES_DB: db
        ports:
          - 5432:5432
    steps:
      - name: checkout
        uses: actions/checkout@v2

      - uses: actions/setup-python@v4
        with:
          python-version: "3.10.8"

      - name: install pipenv
        run: |
          python -m pip install --upgrade pip
          python -m pip install pipenv

      - name: install mecab etc..
        run: |
          sudo apt install mecab libmecab-dev mecab-ipadic-utf8 git make curl xz-utils file

      - name: set neologd
        run: |
          git clone --depth 1 https://github.com/neologd/mecab-ipadic-neologd.git
          cd mecab-ipadic-neologd
          echo yes | ./bin/install-mecab-ipadic-neologd -n
          echo `mecab-config --dicdir`"/mecab-ipadic-neologd"

      - name: make env file
        run: |
          MECAB_DIC_PATH=$(echo `mecab-config --dicdir`"/mecab-ipadic-neologd")
          echo "MECAB_DIC_PATH=${MECAB_DIC_PATH}" > .env
          echo "POSTGRES_USER=user" >> .env
          echo "POSTGRES_PASSWORD=password" >> .env
          echo "POSTGRES_DB=db" >> .env
          echo "POSTGRES_SERVER=127.0.0.1" >> .env
          echo "POSTGRES_SERVER_PORT=5432" >> .env
          cat .env

      - name: install packages
        run: pipenv install --dev

      - name: run test
        run: |
          pipenv run pytest
